// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.SurfaceDescriptorFromAndroidNativeWindow"/>
public sealed unsafe class SurfaceDescriptorFromAndroidNativeWindow : ChainedStruct<Silk.NET.WebGPU.SurfaceDescriptorFromAndroidNativeWindow>
{
    public static implicit operator Silk.NET.WebGPU.SurfaceDescriptorFromAndroidNativeWindow(SurfaceDescriptorFromAndroidNativeWindow managed)
        => managed != null ? managed.Get() : default;

    public static implicit operator Span<Silk.NET.WebGPU.SurfaceDescriptorFromAndroidNativeWindow>(SurfaceDescriptorFromAndroidNativeWindow managed)
        => managed != null ? managed.GetRef() : default;

    /// <summary>
    /// This is a currently unsupported type.
    /// Native type: void*.
    /// Original name: Window.
    /// Is array type?: false.
    /// </summary>
    /// <seealso cref="Silk.NET.WebGPU.SurfaceDescriptorFromAndroidNativeWindow.Window" />
    public void* Window
    {
        get => Native->Window;
        set => Native->Window = value;
    }

    public override string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"SurfaceDescriptorFromAndroidNativeWindow {{
}}";
    }

    protected override void Dispose(bool disposing)
    {
        if (Disposed) return;
        base.Dispose(disposing);
    }
}
