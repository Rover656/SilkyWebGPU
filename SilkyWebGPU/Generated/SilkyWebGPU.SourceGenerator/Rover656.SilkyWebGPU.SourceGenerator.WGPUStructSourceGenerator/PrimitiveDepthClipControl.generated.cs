// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.PrimitiveDepthClipControl"/>
public sealed unsafe class PrimitiveDepthClipControl : ChainedStruct<Silk.NET.WebGPU.PrimitiveDepthClipControl>
{
    public static implicit operator Silk.NET.WebGPU.PrimitiveDepthClipControl(PrimitiveDepthClipControl managed)
        => managed != null ? managed.Get() : default;

    public static implicit operator Span<Silk.NET.WebGPU.PrimitiveDepthClipControl>(PrimitiveDepthClipControl managed)
        => managed != null ? managed.GetRef() : default;

    /// <seealso cref="Silk.NET.WebGPU.PrimitiveDepthClipControl.UnclippedDepth" />
    public Silk.NET.Core.Bool32 UnclippedDepth
    {
        get => Native->UnclippedDepth;
        set => Native->UnclippedDepth = value;
    }
 
    public override string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"PrimitiveDepthClipControl {{
    UnclippedDepth = ""{UnclippedDepth}""
}}";
    }

    protected override void Dispose(bool disposing)
    {
        if (Disposed) return;
        base.Dispose(disposing);
    }
}
