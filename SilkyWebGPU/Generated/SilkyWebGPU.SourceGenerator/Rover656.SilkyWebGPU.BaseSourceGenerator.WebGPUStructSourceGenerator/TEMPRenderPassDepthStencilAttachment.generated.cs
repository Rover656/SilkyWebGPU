// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

public sealed class TEMPRenderPassDepthStencilAttachment : WrappedStruct<Silk.NET.WebGPU.RenderPassDepthStencilAttachment>
{
    public unsafe Silk.NET.WebGPU.TextureView* View
    {
        get => Native.View;
        set => Native.View = value;
    }

    public Silk.NET.WebGPU.LoadOp DepthLoadOp
    {
        get => Native.DepthLoadOp;
        set => Native.DepthLoadOp = value;
    }

    public Silk.NET.WebGPU.StoreOp DepthStoreOp
    {
        get => Native.DepthStoreOp;
        set => Native.DepthStoreOp = value;
    }

    public float DepthClearValue
    {
        get => Native.DepthClearValue;
        set => Native.DepthClearValue = value;
    }

    public Silk.NET.Core.Bool32 DepthReadOnly
    {
        get => Native.DepthReadOnly;
        set => Native.DepthReadOnly = value;
    }

    public Silk.NET.WebGPU.LoadOp StencilLoadOp
    {
        get => Native.StencilLoadOp;
        set => Native.StencilLoadOp = value;
    }

    public Silk.NET.WebGPU.StoreOp StencilStoreOp
    {
        get => Native.StencilStoreOp;
        set => Native.StencilStoreOp = value;
    }

    public uint StencilClearValue
    {
        get => Native.StencilClearValue;
        set => Native.StencilClearValue = value;
    }

    public Silk.NET.Core.Bool32 StencilReadOnly
    {
        get => Native.StencilReadOnly;
        set => Native.StencilReadOnly = value;
    }
}