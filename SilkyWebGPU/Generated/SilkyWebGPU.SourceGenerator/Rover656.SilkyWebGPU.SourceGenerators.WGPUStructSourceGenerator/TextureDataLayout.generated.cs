// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.TextureDataLayout"/>
public class TextureDataLayout : NewNewChainedStruct<Silk.NET.WebGPU.TextureDataLayout>
{

    /// <seealso cref="Silk.NET.WebGPU.TextureDataLayout.Offset" />
    public ulong Offset
    {
        get => Native.Offset;
        set => Native.Offset = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.TextureDataLayout.BytesPerRow" />
    public uint BytesPerRow
    {
        get => Native.BytesPerRow;
        set => Native.BytesPerRow = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.TextureDataLayout.RowsPerImage" />
    public uint RowsPerImage
    {
        get => Native.RowsPerImage;
        set => Native.RowsPerImage = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"TextureDataLayout {{
    Offset = ""{Offset}""
    BytesPerRow = ""{BytesPerRow}""
    RowsPerImage = ""{RowsPerImage}""
}}";
    }
    internal override TextureDataLayout Clone()
    {
        var clone = new TextureDataLayout();
        clone.Native = Native;
        clone.Next = Next;
        return clone;
    }
}
