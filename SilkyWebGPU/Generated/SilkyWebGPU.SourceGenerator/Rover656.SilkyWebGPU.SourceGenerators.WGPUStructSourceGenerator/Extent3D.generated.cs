// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.Extent3D"/>
public class Extent3D : WrappedStruct<Silk.NET.WebGPU.Extent3D>
{
    public static implicit operator Extent3D(Silk.NET.WebGPU.Extent3D native) {
        var ret = new Extent3D();
        ret.Native = native;
        return ret;
    }

    /// <seealso cref="Silk.NET.WebGPU.Extent3D.Width" />
    public uint Width
    {
        get => Native.Width;
        set => Native.Width = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Extent3D.Height" />
    public uint Height
    {
        get => Native.Height;
        set => Native.Height = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Extent3D.DepthOrArrayLayers" />
    public uint DepthOrArrayLayers
    {
        get => Native.DepthOrArrayLayers;
        set => Native.DepthOrArrayLayers = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"Extent3D {{
    Width = ""{Width}""
    Height = ""{Height}""
    DepthOrArrayLayers = ""{DepthOrArrayLayers}""
}}";
    }
}
