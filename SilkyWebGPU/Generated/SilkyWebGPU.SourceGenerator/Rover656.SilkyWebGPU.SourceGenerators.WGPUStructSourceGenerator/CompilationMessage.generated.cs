// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.CompilationMessage"/>
public class CompilationMessage : ChainedStruct<Silk.NET.WebGPU.CompilationMessage>
{

    /// <seealso cref="Silk.NET.WebGPU.CompilationMessage.Message" />
    public unsafe string Message
    {
        get => SilkMarshal.PtrToString((nint) Native.Message);

        set
       {
           if (Native.Message != null)
               SilkMarshal.Free((nint) Native.Message);
           Native.Message = (byte *) SilkMarshal.StringToPtr(value);
        }
    }
 
    /// <seealso cref="Silk.NET.WebGPU.CompilationMessage.Type" />
    public Silk.NET.WebGPU.CompilationMessageType Type
    {
        get => Native.Type;
        set => Native.Type = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.CompilationMessage.LineNum" />
    public ulong LineNum
    {
        get => Native.LineNum;
        set => Native.LineNum = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.CompilationMessage.LinePos" />
    public ulong LinePos
    {
        get => Native.LinePos;
        set => Native.LinePos = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.CompilationMessage.Offset" />
    public ulong Offset
    {
        get => Native.Offset;
        set => Native.Offset = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.CompilationMessage.Length" />
    public ulong Length
    {
        get => Native.Length;
        set => Native.Length = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.CompilationMessage.Utf16LinePos" />
    public ulong Utf16LinePos
    {
        get => Native.Utf16LinePos;
        set => Native.Utf16LinePos = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.CompilationMessage.Utf16Offset" />
    public ulong Utf16Offset
    {
        get => Native.Utf16Offset;
        set => Native.Utf16Offset = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.CompilationMessage.Utf16Length" />
    public ulong Utf16Length
    {
        get => Native.Utf16Length;
        set => Native.Utf16Length = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"CompilationMessage {{
    Message = ""{Message}""
    Type = ""{Type}""
    LineNum = ""{LineNum}""
    LinePos = ""{LinePos}""
    Offset = ""{Offset}""
    Length = ""{Length}""
    Utf16LinePos = ""{Utf16LinePos}""
    Utf16Offset = ""{Utf16Offset}""
    Utf16Length = ""{Utf16Length}""
}}";
    }

    protected override unsafe void ReleaseUnmanagedResources()
    {
        SilkMarshal.Free((nint) Native.Message);
        Native.Message = null;
    }
}
