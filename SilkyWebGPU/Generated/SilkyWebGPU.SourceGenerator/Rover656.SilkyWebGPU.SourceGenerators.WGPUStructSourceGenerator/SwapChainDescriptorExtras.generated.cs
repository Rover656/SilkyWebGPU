// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.Extensions.WGPU.SwapChainDescriptorExtras"/>
public class ManagedSwapChainDescriptorExtras : ChainedStruct<Silk.NET.WebGPU.Extensions.WGPU.SwapChainDescriptorExtras>
{

    /// <seealso cref="Silk.NET.WebGPU.Extensions.WGPU.SwapChainDescriptorExtras.AlphaMode" />
    public Silk.NET.WebGPU.Extensions.WGPU.CompositeAlphaMode AlphaMode
    {
        get => Native.AlphaMode;
        set => Native.AlphaMode = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Extensions.WGPU.SwapChainDescriptorExtras.ViewFormatCount" />
    public nuint ViewFormatCount
    {
        get => Native.ViewFormatCount;
        set => Native.ViewFormatCount = value;
    }
 
    /// <summary>
    /// This is a currently unsupported type.
    /// Native type: Silk.NET.WebGPU.TextureFormat*.
    /// Original name: ViewFormats.
    /// Is array type?: True.
    /// </summary>
    /// <seealso cref="Silk.NET.WebGPU.Extensions.WGPU.SwapChainDescriptorExtras.ViewFormats" />
    public unsafe Silk.NET.WebGPU.TextureFormat* ViewFormats
    {
        get => Native.ViewFormats;
        set => Native.ViewFormats = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"SwapChainDescriptorExtras {{
    AlphaMode = ""{AlphaMode}""
    ViewFormatCount = ""{ViewFormatCount}""
}}";
    }

    public override unsafe void Dispose()
    {
        base.Dispose();
    }

    protected override unsafe void ReleaseUnmanagedResources()
    {
    }
}
