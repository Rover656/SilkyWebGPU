// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.Color"/>
public class Color : WrappedStruct<Silk.NET.WebGPU.Color>
{
    public static implicit operator Color(Silk.NET.WebGPU.Color native) {
        var ret = new Color();
        ret.Native = native;
        return ret;
    }

    /// <seealso cref="Silk.NET.WebGPU.Color.R" />
    public double R
    {
        get => Native.R;
        set => Native.R = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Color.G" />
    public double G
    {
        get => Native.G;
        set => Native.G = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Color.B" />
    public double B
    {
        get => Native.B;
        set => Native.B = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Color.A" />
    public double A
    {
        get => Native.A;
        set => Native.A = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"Color {{
    R = ""{R}""
    G = ""{G}""
    B = ""{B}""
    A = ""{A}""
}}";
    }
}
