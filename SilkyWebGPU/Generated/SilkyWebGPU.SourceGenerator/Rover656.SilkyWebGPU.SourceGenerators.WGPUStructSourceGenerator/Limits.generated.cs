// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.Limits"/>
public class Limits : WrappedStruct<Silk.NET.WebGPU.Limits>
{
    public static implicit operator Limits(Silk.NET.WebGPU.Limits native) {
        var ret = new Limits();
        ret.Native = native;
        return ret;
    }

    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxTextureDimension1D" />
    public uint MaxTextureDimension1D
    {
        get => Native.MaxTextureDimension1D;
        set => Native.MaxTextureDimension1D = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxTextureDimension2D" />
    public uint MaxTextureDimension2D
    {
        get => Native.MaxTextureDimension2D;
        set => Native.MaxTextureDimension2D = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxTextureDimension3D" />
    public uint MaxTextureDimension3D
    {
        get => Native.MaxTextureDimension3D;
        set => Native.MaxTextureDimension3D = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxTextureArrayLayers" />
    public uint MaxTextureArrayLayers
    {
        get => Native.MaxTextureArrayLayers;
        set => Native.MaxTextureArrayLayers = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxBindGroups" />
    public uint MaxBindGroups
    {
        get => Native.MaxBindGroups;
        set => Native.MaxBindGroups = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxBindingsPerBindGroup" />
    public uint MaxBindingsPerBindGroup
    {
        get => Native.MaxBindingsPerBindGroup;
        set => Native.MaxBindingsPerBindGroup = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxDynamicUniformBuffersPerPipelineLayout" />
    public uint MaxDynamicUniformBuffersPerPipelineLayout
    {
        get => Native.MaxDynamicUniformBuffersPerPipelineLayout;
        set => Native.MaxDynamicUniformBuffersPerPipelineLayout = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxDynamicStorageBuffersPerPipelineLayout" />
    public uint MaxDynamicStorageBuffersPerPipelineLayout
    {
        get => Native.MaxDynamicStorageBuffersPerPipelineLayout;
        set => Native.MaxDynamicStorageBuffersPerPipelineLayout = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxSampledTexturesPerShaderStage" />
    public uint MaxSampledTexturesPerShaderStage
    {
        get => Native.MaxSampledTexturesPerShaderStage;
        set => Native.MaxSampledTexturesPerShaderStage = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxSamplersPerShaderStage" />
    public uint MaxSamplersPerShaderStage
    {
        get => Native.MaxSamplersPerShaderStage;
        set => Native.MaxSamplersPerShaderStage = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxStorageBuffersPerShaderStage" />
    public uint MaxStorageBuffersPerShaderStage
    {
        get => Native.MaxStorageBuffersPerShaderStage;
        set => Native.MaxStorageBuffersPerShaderStage = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxStorageTexturesPerShaderStage" />
    public uint MaxStorageTexturesPerShaderStage
    {
        get => Native.MaxStorageTexturesPerShaderStage;
        set => Native.MaxStorageTexturesPerShaderStage = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxUniformBuffersPerShaderStage" />
    public uint MaxUniformBuffersPerShaderStage
    {
        get => Native.MaxUniformBuffersPerShaderStage;
        set => Native.MaxUniformBuffersPerShaderStage = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxUniformBufferBindingSize" />
    public ulong MaxUniformBufferBindingSize
    {
        get => Native.MaxUniformBufferBindingSize;
        set => Native.MaxUniformBufferBindingSize = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxStorageBufferBindingSize" />
    public ulong MaxStorageBufferBindingSize
    {
        get => Native.MaxStorageBufferBindingSize;
        set => Native.MaxStorageBufferBindingSize = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MinUniformBufferOffsetAlignment" />
    public uint MinUniformBufferOffsetAlignment
    {
        get => Native.MinUniformBufferOffsetAlignment;
        set => Native.MinUniformBufferOffsetAlignment = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MinStorageBufferOffsetAlignment" />
    public uint MinStorageBufferOffsetAlignment
    {
        get => Native.MinStorageBufferOffsetAlignment;
        set => Native.MinStorageBufferOffsetAlignment = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxVertexBuffers" />
    public uint MaxVertexBuffers
    {
        get => Native.MaxVertexBuffers;
        set => Native.MaxVertexBuffers = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxBufferSize" />
    public ulong MaxBufferSize
    {
        get => Native.MaxBufferSize;
        set => Native.MaxBufferSize = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxVertexAttributes" />
    public uint MaxVertexAttributes
    {
        get => Native.MaxVertexAttributes;
        set => Native.MaxVertexAttributes = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxVertexBufferArrayStride" />
    public uint MaxVertexBufferArrayStride
    {
        get => Native.MaxVertexBufferArrayStride;
        set => Native.MaxVertexBufferArrayStride = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxInterStageShaderComponents" />
    public uint MaxInterStageShaderComponents
    {
        get => Native.MaxInterStageShaderComponents;
        set => Native.MaxInterStageShaderComponents = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxInterStageShaderVariables" />
    public uint MaxInterStageShaderVariables
    {
        get => Native.MaxInterStageShaderVariables;
        set => Native.MaxInterStageShaderVariables = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxColorAttachments" />
    public uint MaxColorAttachments
    {
        get => Native.MaxColorAttachments;
        set => Native.MaxColorAttachments = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxColorAttachmentBytesPerSample" />
    public uint MaxColorAttachmentBytesPerSample
    {
        get => Native.MaxColorAttachmentBytesPerSample;
        set => Native.MaxColorAttachmentBytesPerSample = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxComputeWorkgroupStorageSize" />
    public uint MaxComputeWorkgroupStorageSize
    {
        get => Native.MaxComputeWorkgroupStorageSize;
        set => Native.MaxComputeWorkgroupStorageSize = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxComputeInvocationsPerWorkgroup" />
    public uint MaxComputeInvocationsPerWorkgroup
    {
        get => Native.MaxComputeInvocationsPerWorkgroup;
        set => Native.MaxComputeInvocationsPerWorkgroup = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxComputeWorkgroupSizeX" />
    public uint MaxComputeWorkgroupSizeX
    {
        get => Native.MaxComputeWorkgroupSizeX;
        set => Native.MaxComputeWorkgroupSizeX = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxComputeWorkgroupSizeY" />
    public uint MaxComputeWorkgroupSizeY
    {
        get => Native.MaxComputeWorkgroupSizeY;
        set => Native.MaxComputeWorkgroupSizeY = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxComputeWorkgroupSizeZ" />
    public uint MaxComputeWorkgroupSizeZ
    {
        get => Native.MaxComputeWorkgroupSizeZ;
        set => Native.MaxComputeWorkgroupSizeZ = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.Limits.MaxComputeWorkgroupsPerDimension" />
    public uint MaxComputeWorkgroupsPerDimension
    {
        get => Native.MaxComputeWorkgroupsPerDimension;
        set => Native.MaxComputeWorkgroupsPerDimension = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"Limits {{
    MaxTextureDimension1D = ""{MaxTextureDimension1D}""
    MaxTextureDimension2D = ""{MaxTextureDimension2D}""
    MaxTextureDimension3D = ""{MaxTextureDimension3D}""
    MaxTextureArrayLayers = ""{MaxTextureArrayLayers}""
    MaxBindGroups = ""{MaxBindGroups}""
    MaxBindingsPerBindGroup = ""{MaxBindingsPerBindGroup}""
    MaxDynamicUniformBuffersPerPipelineLayout = ""{MaxDynamicUniformBuffersPerPipelineLayout}""
    MaxDynamicStorageBuffersPerPipelineLayout = ""{MaxDynamicStorageBuffersPerPipelineLayout}""
    MaxSampledTexturesPerShaderStage = ""{MaxSampledTexturesPerShaderStage}""
    MaxSamplersPerShaderStage = ""{MaxSamplersPerShaderStage}""
    MaxStorageBuffersPerShaderStage = ""{MaxStorageBuffersPerShaderStage}""
    MaxStorageTexturesPerShaderStage = ""{MaxStorageTexturesPerShaderStage}""
    MaxUniformBuffersPerShaderStage = ""{MaxUniformBuffersPerShaderStage}""
    MaxUniformBufferBindingSize = ""{MaxUniformBufferBindingSize}""
    MaxStorageBufferBindingSize = ""{MaxStorageBufferBindingSize}""
    MinUniformBufferOffsetAlignment = ""{MinUniformBufferOffsetAlignment}""
    MinStorageBufferOffsetAlignment = ""{MinStorageBufferOffsetAlignment}""
    MaxVertexBuffers = ""{MaxVertexBuffers}""
    MaxBufferSize = ""{MaxBufferSize}""
    MaxVertexAttributes = ""{MaxVertexAttributes}""
    MaxVertexBufferArrayStride = ""{MaxVertexBufferArrayStride}""
    MaxInterStageShaderComponents = ""{MaxInterStageShaderComponents}""
    MaxInterStageShaderVariables = ""{MaxInterStageShaderVariables}""
    MaxColorAttachments = ""{MaxColorAttachments}""
    MaxColorAttachmentBytesPerSample = ""{MaxColorAttachmentBytesPerSample}""
    MaxComputeWorkgroupStorageSize = ""{MaxComputeWorkgroupStorageSize}""
    MaxComputeInvocationsPerWorkgroup = ""{MaxComputeInvocationsPerWorkgroup}""
    MaxComputeWorkgroupSizeX = ""{MaxComputeWorkgroupSizeX}""
    MaxComputeWorkgroupSizeY = ""{MaxComputeWorkgroupSizeY}""
    MaxComputeWorkgroupSizeZ = ""{MaxComputeWorkgroupSizeZ}""
    MaxComputeWorkgroupsPerDimension = ""{MaxComputeWorkgroupsPerDimension}""
}}";
    }
}
