// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.VertexAttribute"/>
public class VertexAttribute : WrappedStruct<Silk.NET.WebGPU.VertexAttribute>
{
    public static implicit operator VertexAttribute(Silk.NET.WebGPU.VertexAttribute native) {
        var ret = new VertexAttribute();
        ret.Native = native;
        return ret;
    }

    /// <seealso cref="Silk.NET.WebGPU.VertexAttribute.Format" />
    public Silk.NET.WebGPU.VertexFormat Format
    {
        get => Native.Format;
        set => Native.Format = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.VertexAttribute.Offset" />
    public ulong Offset
    {
        get => Native.Offset;
        set => Native.Offset = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.VertexAttribute.ShaderLocation" />
    public uint ShaderLocation
    {
        get => Native.ShaderLocation;
        set => Native.ShaderLocation = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"VertexAttribute {{
    Format = ""{Format}""
    Offset = ""{Offset}""
    ShaderLocation = ""{ShaderLocation}""
}}";
    }
}
