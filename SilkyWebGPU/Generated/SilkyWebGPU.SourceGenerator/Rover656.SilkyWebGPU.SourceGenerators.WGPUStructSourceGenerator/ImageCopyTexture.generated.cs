// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.ImageCopyTexture"/>
public class ImageCopyTexture : ChainedStruct<Silk.NET.WebGPU.ImageCopyTexture>
{

    /// <seealso cref="Silk.NET.WebGPU.ImageCopyTexture.Texture" />
    public unsafe WebGPUPtr<Silk.NET.WebGPU.Texture> Texture
    {
        get => WebGPUPtr<Silk.NET.WebGPU.Texture>.Weak(Native.Texture);
        set => Native.Texture = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.ImageCopyTexture.MipLevel" />
    public uint MipLevel
    {
        get => Native.MipLevel;
        set => Native.MipLevel = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.ImageCopyTexture.Origin" />
    public Origin3D Origin
    {
        get => Native.Origin;
        set => Native.Origin = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.ImageCopyTexture.Aspect" />
    public Silk.NET.WebGPU.TextureAspect Aspect
    {
        get => Native.Aspect;
        set => Native.Aspect = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"ImageCopyTexture {{
    MipLevel = ""{MipLevel}""
    Origin = ""{Origin}""
    Aspect = ""{Aspect}""
}}";
    }
}
