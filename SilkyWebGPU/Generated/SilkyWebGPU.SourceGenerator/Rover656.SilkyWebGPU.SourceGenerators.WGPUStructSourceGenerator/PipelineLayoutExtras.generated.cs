// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.Extensions.WGPU.PipelineLayoutExtras"/>
public class ManagedPipelineLayoutExtras : ChainedStruct<Silk.NET.WebGPU.Extensions.WGPU.PipelineLayoutExtras>
{

    /// <seealso cref="Silk.NET.WebGPU.Extensions.WGPU.PipelineLayoutExtras.PushConstantRangeCount" />
    public uint PushConstantRangeCount
    {
        get => Native.PushConstantRangeCount;
        set => Native.PushConstantRangeCount = value;
    }
 
    /// <summary>
    /// This is a currently unsupported type.
    /// Native type: Silk.NET.WebGPU.Extensions.WGPU.PushConstantRange*.
    /// Original name: PushConstantRanges.
    /// Is array type?: True.
    /// </summary>
    /// <seealso cref="Silk.NET.WebGPU.Extensions.WGPU.PipelineLayoutExtras.PushConstantRanges" />
    public unsafe Silk.NET.WebGPU.Extensions.WGPU.PushConstantRange* PushConstantRanges
    {
        get => Native.PushConstantRanges;
        set => Native.PushConstantRanges = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"PipelineLayoutExtras {{
    PushConstantRangeCount = ""{PushConstantRangeCount}""
}}";
    }

    public override unsafe void Dispose()
    {
        base.Dispose();
    }

    protected override unsafe void ReleaseUnmanagedResources()
    {
    }
}
