// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment"/>
public class RenderPassDepthStencilAttachment : WrappedStruct<Silk.NET.WebGPU.RenderPassDepthStencilAttachment>
{
    public static implicit operator RenderPassDepthStencilAttachment(Silk.NET.WebGPU.RenderPassDepthStencilAttachment native) {
        var ret = new RenderPassDepthStencilAttachment();
        ret.Native = native;
        return ret;
    }

    /// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment.View" />
    public unsafe WebGPUPtr<Silk.NET.WebGPU.TextureView> View
    {
        get => WebGPUPtr<Silk.NET.WebGPU.TextureView>.Weak(Native.View);
        set => Native.View = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment.DepthLoadOp" />
    public Silk.NET.WebGPU.LoadOp DepthLoadOp
    {
        get => Native.DepthLoadOp;
        set => Native.DepthLoadOp = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment.DepthStoreOp" />
    public Silk.NET.WebGPU.StoreOp DepthStoreOp
    {
        get => Native.DepthStoreOp;
        set => Native.DepthStoreOp = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment.DepthClearValue" />
    public float DepthClearValue
    {
        get => Native.DepthClearValue;
        set => Native.DepthClearValue = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment.DepthReadOnly" />
    public Silk.NET.Core.Bool32 DepthReadOnly
    {
        get => Native.DepthReadOnly;
        set => Native.DepthReadOnly = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment.StencilLoadOp" />
    public Silk.NET.WebGPU.LoadOp StencilLoadOp
    {
        get => Native.StencilLoadOp;
        set => Native.StencilLoadOp = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment.StencilStoreOp" />
    public Silk.NET.WebGPU.StoreOp StencilStoreOp
    {
        get => Native.StencilStoreOp;
        set => Native.StencilStoreOp = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment.StencilClearValue" />
    public uint StencilClearValue
    {
        get => Native.StencilClearValue;
        set => Native.StencilClearValue = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RenderPassDepthStencilAttachment.StencilReadOnly" />
    public Silk.NET.Core.Bool32 StencilReadOnly
    {
        get => Native.StencilReadOnly;
        set => Native.StencilReadOnly = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"RenderPassDepthStencilAttachment {{
    DepthLoadOp = ""{DepthLoadOp}""
    DepthStoreOp = ""{DepthStoreOp}""
    DepthClearValue = ""{DepthClearValue}""
    DepthReadOnly = ""{DepthReadOnly}""
    StencilLoadOp = ""{StencilLoadOp}""
    StencilStoreOp = ""{StencilStoreOp}""
    StencilClearValue = ""{StencilClearValue}""
    StencilReadOnly = ""{StencilReadOnly}""
}}";
    }
}
