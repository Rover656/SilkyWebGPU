// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.SurfaceDescriptorFromWaylandSurface"/>
public class SurfaceDescriptorFromWaylandSurface : NewNewChainedStruct<Silk.NET.WebGPU.SurfaceDescriptorFromWaylandSurface>
{

    /// <summary>
    /// This is a currently unsupported type.
    /// Native type: void*.
    /// Original name: Display.
    /// Is array type?: false.
    /// </summary>
    /// <seealso cref="Silk.NET.WebGPU.SurfaceDescriptorFromWaylandSurface.Display" />
    public unsafe void* Display
    {
        get => Native.Display;
        set => Native.Display = value;
    }

    /// <summary>
    /// This is a currently unsupported type.
    /// Native type: void*.
    /// Original name: Surface.
    /// Is array type?: false.
    /// </summary>
    /// <seealso cref="Silk.NET.WebGPU.SurfaceDescriptorFromWaylandSurface.Surface" />
    public unsafe void* Surface
    {
        get => Native.Surface;
        set => Native.Surface = value;
    }

    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"SurfaceDescriptorFromWaylandSurface {{
}}";
    }
    internal override SurfaceDescriptorFromWaylandSurface Clone()
    {
        var clone = new SurfaceDescriptorFromWaylandSurface();
        clone.Native = Native;
        clone.Next = Next;
        return clone;
    }
}
