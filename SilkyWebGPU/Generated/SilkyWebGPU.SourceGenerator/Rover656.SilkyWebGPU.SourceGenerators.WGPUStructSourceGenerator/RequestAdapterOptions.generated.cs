// <auto-generated/>

using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.Core.Native;
using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

/// <seealso cref="Silk.NET.WebGPU.RequestAdapterOptions"/>
public class RequestAdapterOptions : NewNewChainedStruct<Silk.NET.WebGPU.RequestAdapterOptions>
{

    /// <seealso cref="Silk.NET.WebGPU.RequestAdapterOptions.CompatibleSurface" />
    public unsafe WebGPUPtr<Silk.NET.WebGPU.Surface> CompatibleSurface
    {
        get => WebGPUPtr<Silk.NET.WebGPU.Surface>.Weak(Native.CompatibleSurface);
        set => Native.CompatibleSurface = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RequestAdapterOptions.PowerPreference" />
    public Silk.NET.WebGPU.PowerPreference PowerPreference
    {
        get => Native.PowerPreference;
        set => Native.PowerPreference = value;
    }
 
    /// <seealso cref="Silk.NET.WebGPU.RequestAdapterOptions.ForceFallbackAdapter" />
    public Silk.NET.Core.Bool32 ForceFallbackAdapter
    {
        get => Native.ForceFallbackAdapter;
        set => Native.ForceFallbackAdapter = value;
    }
 
    public override unsafe string ToString()
    {
        // Write anything to the console we deem writable. This might not be accurate but its good enough for debug purposes :)
        return $@"RequestAdapterOptions {{
    PowerPreference = ""{PowerPreference}""
    ForceFallbackAdapter = ""{ForceFallbackAdapter}""
}}";
    }
    internal override RequestAdapterOptions Clone()
    {
        var clone = new RequestAdapterOptions();
        clone.Native = Native;
        clone.Next = Next;
        return clone;
    }
}
