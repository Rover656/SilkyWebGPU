// <auto-generated/>
using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU;

public static partial class MethodExtensions
{
    public static unsafe bool TryGetExtension<T>(this WebGPUPtr<Silk.NET.WebGPU.Device> device, out T ext) where T : Silk.NET.Core.Native.NativeExtension<Silk.NET.WebGPU.WebGPU>
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TryGetDeviceExtension(device, out ext);
    }

    public static unsafe bool IsExtensionPresent(this WebGPUPtr<Silk.NET.WebGPU.Device> device, string extension) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.IsDeviceExtensionPresent(device, extension);
    }

    public static unsafe Silk.NET.WebGPU.PfnProc GetProcAddress(this WebGPUPtr<Silk.NET.WebGPU.Device> device, byte* procName) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.GetProcAddress(device, procName);
    }

    public static unsafe Silk.NET.WebGPU.PfnProc GetProcAddress(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in byte procName) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.GetProcAddress(device, procName);
    }

    public static unsafe Silk.NET.WebGPU.PfnProc GetProcAddress(this WebGPUPtr<Silk.NET.WebGPU.Device> device, string procName) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.GetProcAddress(device, procName);
    }

    public static unsafe nuint EnumerateFeatures(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, Silk.NET.WebGPU.FeatureName* features) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterEnumerateFeatures(adapter, features);
    }

    public static unsafe nuint EnumerateFeatures(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, ref Silk.NET.WebGPU.FeatureName features) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterEnumerateFeatures(adapter, ref features);
    }

    public static unsafe Silk.NET.Core.Bool32 GetLimits(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, Silk.NET.WebGPU.SupportedLimits* limits) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterGetLimits(adapter, limits);
    }

    public static unsafe Silk.NET.Core.Bool32 GetLimits(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, ref Silk.NET.WebGPU.SupportedLimits limits) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterGetLimits(adapter, ref limits);
    }

    public static unsafe void GetProperties(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, Silk.NET.WebGPU.AdapterProperties* properties) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterGetProperties(adapter, properties);
    }

    public static unsafe void GetProperties(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, ref Silk.NET.WebGPU.AdapterProperties properties) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterGetProperties(adapter, ref properties);
    }

    public static unsafe Silk.NET.Core.Bool32 HasFeature(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, Silk.NET.WebGPU.FeatureName feature) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterHasFeature(adapter, feature);
    }

    public static unsafe void RequestDevice(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, Silk.NET.WebGPU.DeviceDescriptor* descriptor, Silk.NET.WebGPU.PfnRequestDeviceCallback callback, void* userdata) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterRequestDevice(adapter, descriptor, callback, userdata);
    }

    public static unsafe void RequestDevice<T0>(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, Silk.NET.WebGPU.DeviceDescriptor* descriptor, Silk.NET.WebGPU.PfnRequestDeviceCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterRequestDevice(adapter, descriptor, callback, ref userdata);
    }

    public static unsafe void RequestDevice(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, in Silk.NET.WebGPU.DeviceDescriptor descriptor, Silk.NET.WebGPU.PfnRequestDeviceCallback callback, void* userdata) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterRequestDevice(adapter, descriptor, callback, userdata);
    }

    public static unsafe void RequestDevice<T0>(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, in Silk.NET.WebGPU.DeviceDescriptor descriptor, Silk.NET.WebGPU.PfnRequestDeviceCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.AdapterRequestDevice(adapter, descriptor, callback, ref userdata);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.BindGroup> bindGroup, byte* label) 
    {
        if (bindGroup.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BindGroupSetLabel(bindGroup, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.BindGroup> bindGroup, in byte label) 
    {
        if (bindGroup.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BindGroupSetLabel(bindGroup, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.BindGroup> bindGroup, string label) 
    {
        if (bindGroup.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BindGroupSetLabel(bindGroup, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout> bindGroupLayout, byte* label) 
    {
        if (bindGroupLayout.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BindGroupLayoutSetLabel(bindGroupLayout, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout> bindGroupLayout, in byte label) 
    {
        if (bindGroupLayout.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BindGroupLayoutSetLabel(bindGroupLayout, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout> bindGroupLayout, string label) 
    {
        if (bindGroupLayout.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BindGroupLayoutSetLabel(bindGroupLayout, label);
    }

    public static unsafe void Destroy(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferDestroy(buffer);
    }

    public static unsafe void* GetConstMappedRange(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, nuint offset, nuint size) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferGetConstMappedRange(buffer, offset, size);
    }

    public static unsafe Silk.NET.WebGPU.BufferMapState GetMapState(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferGetMapState(buffer);
    }

    public static unsafe void* GetMappedRange(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, nuint offset, nuint size) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferGetMappedRange(buffer, offset, size);
    }

    public static unsafe ulong GetSize(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferGetSize(buffer);
    }

    public static unsafe Silk.NET.WebGPU.BufferUsage GetUsage(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferGetUsage(buffer);
    }

    public static unsafe void MapAsync(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, Silk.NET.WebGPU.MapMode mode, nuint offset, nuint size, Silk.NET.WebGPU.PfnBufferMapCallback callback, void* userdata) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferMapAsync(buffer, mode, offset, size, callback, userdata);
    }

    public static unsafe void MapAsync<T0>(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, Silk.NET.WebGPU.MapMode mode, nuint offset, nuint size, Silk.NET.WebGPU.PfnBufferMapCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferMapAsync(buffer, mode, offset, size, callback, ref userdata);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, byte* label) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferSetLabel(buffer, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, in byte label) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferSetLabel(buffer, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, string label) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferSetLabel(buffer, label);
    }

    public static unsafe void Unmap(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.BufferUnmap(buffer);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.CommandBuffer> commandBuffer, byte* label) 
    {
        if (commandBuffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandBufferSetLabel(commandBuffer, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.CommandBuffer> commandBuffer, in byte label) 
    {
        if (commandBuffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandBufferSetLabel(commandBuffer, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.CommandBuffer> commandBuffer, string label) 
    {
        if (commandBuffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandBufferSetLabel(commandBuffer, label);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> BeginComputePass(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ComputePassDescriptor* descriptor) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderBeginComputePass(commandEncoder, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> BeginComputePass(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ComputePassDescriptor descriptor) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderBeginComputePass(commandEncoder, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> BeginRenderPass(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.RenderPassDescriptor* descriptor) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderBeginRenderPass(commandEncoder, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> BeginRenderPass(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.RenderPassDescriptor descriptor) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderBeginRenderPass(commandEncoder, descriptor));
    }

    public static unsafe void ClearBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, ulong offset, ulong size) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderClearBuffer(commandEncoder, buffer, offset, size);
    }

    public static unsafe void CopyBufferToBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> source, ulong sourceOffset, WebGPUPtr<Silk.NET.WebGPU.Buffer> destination, ulong destinationOffset, ulong size) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyBufferToBuffer(commandEncoder, source, sourceOffset, destination, destinationOffset, size);
    }

    public static unsafe void CopyBufferToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyBuffer* source, Silk.NET.WebGPU.ImageCopyTexture* destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyBufferToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyBufferToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyBuffer* source, Silk.NET.WebGPU.ImageCopyTexture* destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyBufferToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyBufferToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyBuffer* source, in Silk.NET.WebGPU.ImageCopyTexture destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyBufferToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyBufferToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyBuffer* source, in Silk.NET.WebGPU.ImageCopyTexture destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyBufferToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyBufferToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyBuffer source, Silk.NET.WebGPU.ImageCopyTexture* destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyBufferToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyBufferToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyBuffer source, Silk.NET.WebGPU.ImageCopyTexture* destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyBufferToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyBufferToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyBuffer source, in Silk.NET.WebGPU.ImageCopyTexture destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyBufferToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyBufferToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyBuffer source, in Silk.NET.WebGPU.ImageCopyTexture destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyBufferToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyTexture* source, Silk.NET.WebGPU.ImageCopyBuffer* destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToBuffer(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyTexture* source, Silk.NET.WebGPU.ImageCopyBuffer* destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToBuffer(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyTexture* source, in Silk.NET.WebGPU.ImageCopyBuffer destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToBuffer(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyTexture* source, in Silk.NET.WebGPU.ImageCopyBuffer destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToBuffer(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyTexture source, Silk.NET.WebGPU.ImageCopyBuffer* destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToBuffer(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyTexture source, Silk.NET.WebGPU.ImageCopyBuffer* destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToBuffer(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyTexture source, in Silk.NET.WebGPU.ImageCopyBuffer destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToBuffer(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToBuffer(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyTexture source, in Silk.NET.WebGPU.ImageCopyBuffer destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToBuffer(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyTexture* source, Silk.NET.WebGPU.ImageCopyTexture* destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyTexture* source, Silk.NET.WebGPU.ImageCopyTexture* destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyTexture* source, in Silk.NET.WebGPU.ImageCopyTexture destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.ImageCopyTexture* source, in Silk.NET.WebGPU.ImageCopyTexture destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyTexture source, Silk.NET.WebGPU.ImageCopyTexture* destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyTexture source, Silk.NET.WebGPU.ImageCopyTexture* destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyTexture source, in Silk.NET.WebGPU.ImageCopyTexture destination, Silk.NET.WebGPU.Extent3D* copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe void CopyTextureToTexture(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.ImageCopyTexture source, in Silk.NET.WebGPU.ImageCopyTexture destination, in Silk.NET.WebGPU.Extent3D copySize) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderCopyTextureToTexture(commandEncoder, source, destination, copySize);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.CommandBuffer> Finish(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, Silk.NET.WebGPU.CommandBufferDescriptor* descriptor) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.CommandBuffer>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderFinish(commandEncoder, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.CommandBuffer> Finish(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in Silk.NET.WebGPU.CommandBufferDescriptor descriptor) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.CommandBuffer>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderFinish(commandEncoder, descriptor));
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, byte* markerLabel) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderInsertDebugMarker(commandEncoder, markerLabel);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in byte markerLabel) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderInsertDebugMarker(commandEncoder, markerLabel);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, string markerLabel) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderInsertDebugMarker(commandEncoder, markerLabel);
    }

    public static unsafe void PopDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderPopDebugGroup(commandEncoder);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, byte* groupLabel) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderPushDebugGroup(commandEncoder, groupLabel);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in byte groupLabel) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderPushDebugGroup(commandEncoder, groupLabel);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, string groupLabel) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderPushDebugGroup(commandEncoder, groupLabel);
    }

    public static unsafe void ResolveQuerySet(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet, uint firstQuery, uint queryCount, WebGPUPtr<Silk.NET.WebGPU.Buffer> destination, ulong destinationOffset) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderResolveQuerySet(commandEncoder, querySet, firstQuery, queryCount, destination, destinationOffset);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, byte* label) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderSetLabel(commandEncoder, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, in byte label) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderSetLabel(commandEncoder, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, string label) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderSetLabel(commandEncoder, label);
    }

    public static unsafe void WriteTimestamp(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder, WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet, uint queryIndex) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.CommandEncoderWriteTimestamp(commandEncoder, querySet, queryIndex);
    }

    public static unsafe void BeginPipelineStatisticsQuery(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet, uint queryIndex) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderBeginPipelineStatisticsQuery(computePassEncoder, querySet, queryIndex);
    }

    public static unsafe void DispatchWorkgroups(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, uint workgroupCountX, uint workgroupCountY, uint workgroupCountZ) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderDispatchWorkgroups(computePassEncoder, workgroupCountX, workgroupCountY, workgroupCountZ);
    }

    public static unsafe void DispatchWorkgroupsIndirect(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> indirectBuffer, ulong indirectOffset) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderDispatchWorkgroupsIndirect(computePassEncoder, indirectBuffer, indirectOffset);
    }

    public static unsafe void End(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderEnd(computePassEncoder);
    }

    public static unsafe void EndPipelineStatisticsQuery(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderEndPipelineStatisticsQuery(computePassEncoder);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, byte* markerLabel) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderInsertDebugMarker(computePassEncoder, markerLabel);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, in byte markerLabel) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderInsertDebugMarker(computePassEncoder, markerLabel);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, string markerLabel) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderInsertDebugMarker(computePassEncoder, markerLabel);
    }

    public static unsafe void PopDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderPopDebugGroup(computePassEncoder);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, byte* groupLabel) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderPushDebugGroup(computePassEncoder, groupLabel);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, in byte groupLabel) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderPushDebugGroup(computePassEncoder, groupLabel);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, string groupLabel) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderPushDebugGroup(computePassEncoder, groupLabel);
    }

    public static unsafe void SetBindGroup(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, uint groupIndex, WebGPUPtr<Silk.NET.WebGPU.BindGroup> group, uint dynamicOffsetCount, uint* dynamicOffsets) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderSetBindGroup(computePassEncoder, groupIndex, group, dynamicOffsetCount, dynamicOffsets);
    }

    public static unsafe void SetBindGroup(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, uint groupIndex, WebGPUPtr<Silk.NET.WebGPU.BindGroup> group, uint dynamicOffsetCount, in uint dynamicOffsets) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderSetBindGroup(computePassEncoder, groupIndex, group, dynamicOffsetCount, dynamicOffsets);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, byte* label) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderSetLabel(computePassEncoder, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, in byte label) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderSetLabel(computePassEncoder, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, string label) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderSetLabel(computePassEncoder, label);
    }

    public static unsafe void SetPipeline(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder, WebGPUPtr<Silk.NET.WebGPU.ComputePipeline> pipeline) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePassEncoderSetPipeline(computePassEncoder, pipeline);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout> GetBindGroupLayout(this WebGPUPtr<Silk.NET.WebGPU.ComputePipeline> computePipeline, uint groupIndex) 
    {
        if (computePipeline.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePipelineGetBindGroupLayout(computePipeline, groupIndex));
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.ComputePipeline> computePipeline, byte* label) 
    {
        if (computePipeline.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePipelineSetLabel(computePipeline, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.ComputePipeline> computePipeline, in byte label) 
    {
        if (computePipeline.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePipelineSetLabel(computePipeline, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.ComputePipeline> computePipeline, string label) 
    {
        if (computePipeline.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ComputePipelineSetLabel(computePipeline, label);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.BindGroup> CreateBindGroup(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.BindGroupDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.BindGroup>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateBindGroup(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.BindGroup> CreateBindGroup(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.BindGroupDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.BindGroup>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateBindGroup(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout> CreateBindGroupLayout(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.BindGroupLayoutDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateBindGroupLayout(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout> CreateBindGroupLayout(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.BindGroupLayoutDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateBindGroupLayout(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.Buffer> CreateBuffer(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.BufferDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.Buffer>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateBuffer(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.Buffer> CreateBuffer(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.BufferDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.Buffer>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateBuffer(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> CreateCommandEncoder(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.CommandEncoderDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.CommandEncoder>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateCommandEncoder(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> CreateCommandEncoder(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.CommandEncoderDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.CommandEncoder>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateCommandEncoder(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.ComputePipeline> CreateComputePipeline(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.ComputePipelineDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.ComputePipeline>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateComputePipeline(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.ComputePipeline> CreateComputePipeline(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.ComputePipelineDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.ComputePipeline>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateComputePipeline(device, descriptor));
    }

    public static unsafe void CreateComputePipelineAsync(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.ComputePipelineDescriptor* descriptor, Silk.NET.WebGPU.PfnCreateComputePipelineAsyncCallback callback, void* userdata) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateComputePipelineAsync(device, descriptor, callback, userdata);
    }

    public static unsafe void CreateComputePipelineAsync<T0>(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.ComputePipelineDescriptor* descriptor, Silk.NET.WebGPU.PfnCreateComputePipelineAsyncCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateComputePipelineAsync(device, descriptor, callback, ref userdata);
    }

    public static unsafe void CreateComputePipelineAsync(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.ComputePipelineDescriptor descriptor, Silk.NET.WebGPU.PfnCreateComputePipelineAsyncCallback callback, void* userdata) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateComputePipelineAsync(device, descriptor, callback, userdata);
    }

    public static unsafe void CreateComputePipelineAsync<T0>(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.ComputePipelineDescriptor descriptor, Silk.NET.WebGPU.PfnCreateComputePipelineAsyncCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateComputePipelineAsync(device, descriptor, callback, ref userdata);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.PipelineLayout> CreatePipelineLayout(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.PipelineLayoutDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.PipelineLayout>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreatePipelineLayout(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.PipelineLayout> CreatePipelineLayout(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.PipelineLayoutDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.PipelineLayout>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreatePipelineLayout(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.QuerySet> CreateQuerySet(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.QuerySetDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.QuerySet>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateQuerySet(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.QuerySet> CreateQuerySet(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.QuerySetDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.QuerySet>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateQuerySet(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> CreateRenderBundleEncoder(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.RenderBundleEncoderDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateRenderBundleEncoder(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> CreateRenderBundleEncoder(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.RenderBundleEncoderDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateRenderBundleEncoder(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.RenderPipeline> CreateRenderPipeline(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.RenderPipelineDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.RenderPipeline>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateRenderPipeline(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.RenderPipeline> CreateRenderPipeline(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.RenderPipelineDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.RenderPipeline>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateRenderPipeline(device, descriptor));
    }

    public static unsafe void CreateRenderPipelineAsync(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.RenderPipelineDescriptor* descriptor, Silk.NET.WebGPU.PfnCreateRenderPipelineAsyncCallback callback, void* userdata) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateRenderPipelineAsync(device, descriptor, callback, userdata);
    }

    public static unsafe void CreateRenderPipelineAsync<T0>(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.RenderPipelineDescriptor* descriptor, Silk.NET.WebGPU.PfnCreateRenderPipelineAsyncCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateRenderPipelineAsync(device, descriptor, callback, ref userdata);
    }

    public static unsafe void CreateRenderPipelineAsync(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.RenderPipelineDescriptor descriptor, Silk.NET.WebGPU.PfnCreateRenderPipelineAsyncCallback callback, void* userdata) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateRenderPipelineAsync(device, descriptor, callback, userdata);
    }

    public static unsafe void CreateRenderPipelineAsync<T0>(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.RenderPipelineDescriptor descriptor, Silk.NET.WebGPU.PfnCreateRenderPipelineAsyncCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateRenderPipelineAsync(device, descriptor, callback, ref userdata);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.Sampler> CreateSampler(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.SamplerDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.Sampler>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateSampler(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.Sampler> CreateSampler(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.SamplerDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.Sampler>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateSampler(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.ShaderModule> CreateShaderModule(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.ShaderModuleDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.ShaderModule>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateShaderModule(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.ShaderModule> CreateShaderModule(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.ShaderModuleDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.ShaderModule>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateShaderModule(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.SwapChain> CreateSwapChain(this WebGPUPtr<Silk.NET.WebGPU.Device> device, WebGPUPtr<Silk.NET.WebGPU.Surface> surface, Silk.NET.WebGPU.SwapChainDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.SwapChain>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateSwapChain(device, surface, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.SwapChain> CreateSwapChain(this WebGPUPtr<Silk.NET.WebGPU.Device> device, WebGPUPtr<Silk.NET.WebGPU.Surface> surface, in Silk.NET.WebGPU.SwapChainDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.SwapChain>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateSwapChain(device, surface, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.Texture> CreateTexture(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.TextureDescriptor* descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.Texture>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateTexture(device, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.Texture> CreateTexture(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in Silk.NET.WebGPU.TextureDescriptor descriptor) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.Texture>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceCreateTexture(device, descriptor));
    }

    public static unsafe void Destroy(this WebGPUPtr<Silk.NET.WebGPU.Device> device) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceDestroy(device);
    }

    public static unsafe nuint EnumerateFeatures(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.FeatureName* features) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceEnumerateFeatures(device, features);
    }

    public static unsafe nuint EnumerateFeatures(this WebGPUPtr<Silk.NET.WebGPU.Device> device, ref Silk.NET.WebGPU.FeatureName features) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceEnumerateFeatures(device, ref features);
    }

    public static unsafe Silk.NET.Core.Bool32 GetLimits(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.SupportedLimits* limits) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceGetLimits(device, limits);
    }

    public static unsafe Silk.NET.Core.Bool32 GetLimits(this WebGPUPtr<Silk.NET.WebGPU.Device> device, ref Silk.NET.WebGPU.SupportedLimits limits) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceGetLimits(device, ref limits);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.Queue> GetQueue(this WebGPUPtr<Silk.NET.WebGPU.Device> device) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.Queue>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceGetQueue(device));
    }

    public static unsafe Silk.NET.Core.Bool32 HasFeature(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.FeatureName feature) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceHasFeature(device, feature);
    }

    public static unsafe Silk.NET.Core.Bool32 PopErrorScope(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.PfnErrorCallback callback, void* userdata) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DevicePopErrorScope(device, callback, userdata);
    }

    public static unsafe Silk.NET.Core.Bool32 PopErrorScope<T0>(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.PfnErrorCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DevicePopErrorScope(device, callback, ref userdata);
    }

    public static unsafe void PushErrorScope(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.ErrorFilter filter) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DevicePushErrorScope(device, filter);
    }

    public static unsafe void SetLostCallback(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.PfnDeviceLostCallback callback, void* userdata) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceSetDeviceLostCallback(device, callback, userdata);
    }

    public static unsafe void SetLostCallback<T0>(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.PfnDeviceLostCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceSetDeviceLostCallback(device, callback, ref userdata);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Device> device, byte* label) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceSetLabel(device, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Device> device, in byte label) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceSetLabel(device, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Device> device, string label) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceSetLabel(device, label);
    }

    public static unsafe void SetUncapturedErrorCallback(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.PfnErrorCallback callback, void* userdata) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceSetUncapturedErrorCallback(device, callback, userdata);
    }

    public static unsafe void SetUncapturedErrorCallback<T0>(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.WebGPU.PfnErrorCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.DeviceSetUncapturedErrorCallback(device, callback, ref userdata);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.Surface> CreateSurface(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance, Silk.NET.WebGPU.SurfaceDescriptor* descriptor) 
    {
        if (instance.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.Surface>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.InstanceCreateSurface(instance, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.Surface> CreateSurface(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance, in Silk.NET.WebGPU.SurfaceDescriptor descriptor) 
    {
        if (instance.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.Surface>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.InstanceCreateSurface(instance, descriptor));
    }

    public static unsafe void ProcessEvents(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance) 
    {
        if (instance.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.InstanceProcessEvents(instance);
    }

    public static unsafe void RequestAdapter(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance, Silk.NET.WebGPU.RequestAdapterOptions* options, Silk.NET.WebGPU.PfnRequestAdapterCallback callback, void* userdata) 
    {
        if (instance.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.InstanceRequestAdapter(instance, options, callback, userdata);
    }

    public static unsafe void RequestAdapter<T0>(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance, Silk.NET.WebGPU.RequestAdapterOptions* options, Silk.NET.WebGPU.PfnRequestAdapterCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (instance.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.InstanceRequestAdapter(instance, options, callback, ref userdata);
    }

    public static unsafe void RequestAdapter(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance, in Silk.NET.WebGPU.RequestAdapterOptions options, Silk.NET.WebGPU.PfnRequestAdapterCallback callback, void* userdata) 
    {
        if (instance.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.InstanceRequestAdapter(instance, options, callback, userdata);
    }

    public static unsafe void RequestAdapter<T0>(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance, in Silk.NET.WebGPU.RequestAdapterOptions options, Silk.NET.WebGPU.PfnRequestAdapterCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (instance.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.InstanceRequestAdapter(instance, options, callback, ref userdata);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.PipelineLayout> pipelineLayout, byte* label) 
    {
        if (pipelineLayout.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.PipelineLayoutSetLabel(pipelineLayout, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.PipelineLayout> pipelineLayout, in byte label) 
    {
        if (pipelineLayout.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.PipelineLayoutSetLabel(pipelineLayout, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.PipelineLayout> pipelineLayout, string label) 
    {
        if (pipelineLayout.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.PipelineLayoutSetLabel(pipelineLayout, label);
    }

    public static unsafe void Destroy(this WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet) 
    {
        if (querySet.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QuerySetDestroy(querySet);
    }

    public static unsafe uint GetCount(this WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet) 
    {
        if (querySet.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QuerySetGetCount(querySet);
    }

    public static unsafe Silk.NET.WebGPU.QueryType GetType(this WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet) 
    {
        if (querySet.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QuerySetGetType(querySet);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet, byte* label) 
    {
        if (querySet.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QuerySetSetLabel(querySet, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet, in byte label) 
    {
        if (querySet.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QuerySetSetLabel(querySet, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet, string label) 
    {
        if (querySet.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QuerySetSetLabel(querySet, label);
    }

    public static unsafe void OnSubmittedWorkDone(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.PfnQueueWorkDoneCallback callback, void* userdata) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueOnSubmittedWorkDone(queue, callback, userdata);
    }

    public static unsafe void OnSubmittedWorkDone<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.PfnQueueWorkDoneCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueOnSubmittedWorkDone(queue, callback, ref userdata);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, byte* label) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueSetLabel(queue, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, in byte label) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueSetLabel(queue, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, string label) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueSetLabel(queue, label);
    }

    public static unsafe void Submit(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, uint commandCount, NativePtrArray<Silk.NET.WebGPU.CommandBuffer> commands) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueSubmit(queue, commandCount, commands);
    }

    public static unsafe void WriteBuffer(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, ulong bufferOffset, void* data, nuint size) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteBuffer(queue, buffer, bufferOffset, data, size);
    }

    public static unsafe void WriteBuffer<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, ulong bufferOffset, in T0 data, nuint size) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteBuffer(queue, buffer, bufferOffset, data, size);
    }

    public static unsafe void WriteTexture(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.ImageCopyTexture* destination, void* data, nuint dataSize, Silk.NET.WebGPU.TextureDataLayout* dataLayout, Silk.NET.WebGPU.Extent3D* writeSize) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.ImageCopyTexture* destination, void* data, nuint dataSize, Silk.NET.WebGPU.TextureDataLayout* dataLayout, in Silk.NET.WebGPU.Extent3D writeSize) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.ImageCopyTexture* destination, void* data, nuint dataSize, in Silk.NET.WebGPU.TextureDataLayout dataLayout, Silk.NET.WebGPU.Extent3D* writeSize) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.ImageCopyTexture* destination, void* data, nuint dataSize, in Silk.NET.WebGPU.TextureDataLayout dataLayout, in Silk.NET.WebGPU.Extent3D writeSize) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.ImageCopyTexture* destination, in T0 data, nuint dataSize, Silk.NET.WebGPU.TextureDataLayout* dataLayout, Silk.NET.WebGPU.Extent3D* writeSize) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.ImageCopyTexture* destination, in T0 data, nuint dataSize, Silk.NET.WebGPU.TextureDataLayout* dataLayout, in Silk.NET.WebGPU.Extent3D writeSize) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.ImageCopyTexture* destination, in T0 data, nuint dataSize, in Silk.NET.WebGPU.TextureDataLayout dataLayout, Silk.NET.WebGPU.Extent3D* writeSize) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, Silk.NET.WebGPU.ImageCopyTexture* destination, in T0 data, nuint dataSize, in Silk.NET.WebGPU.TextureDataLayout dataLayout, in Silk.NET.WebGPU.Extent3D writeSize) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, in Silk.NET.WebGPU.ImageCopyTexture destination, void* data, nuint dataSize, Silk.NET.WebGPU.TextureDataLayout* dataLayout, Silk.NET.WebGPU.Extent3D* writeSize) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, in Silk.NET.WebGPU.ImageCopyTexture destination, void* data, nuint dataSize, Silk.NET.WebGPU.TextureDataLayout* dataLayout, in Silk.NET.WebGPU.Extent3D writeSize) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, in Silk.NET.WebGPU.ImageCopyTexture destination, void* data, nuint dataSize, in Silk.NET.WebGPU.TextureDataLayout dataLayout, Silk.NET.WebGPU.Extent3D* writeSize) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, in Silk.NET.WebGPU.ImageCopyTexture destination, void* data, nuint dataSize, in Silk.NET.WebGPU.TextureDataLayout dataLayout, in Silk.NET.WebGPU.Extent3D writeSize) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, in Silk.NET.WebGPU.ImageCopyTexture destination, in T0 data, nuint dataSize, Silk.NET.WebGPU.TextureDataLayout* dataLayout, Silk.NET.WebGPU.Extent3D* writeSize) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, in Silk.NET.WebGPU.ImageCopyTexture destination, in T0 data, nuint dataSize, Silk.NET.WebGPU.TextureDataLayout* dataLayout, in Silk.NET.WebGPU.Extent3D writeSize) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, in Silk.NET.WebGPU.ImageCopyTexture destination, in T0 data, nuint dataSize, in Silk.NET.WebGPU.TextureDataLayout dataLayout, Silk.NET.WebGPU.Extent3D* writeSize) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void WriteTexture<T0>(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, in Silk.NET.WebGPU.ImageCopyTexture destination, in T0 data, nuint dataSize, in Silk.NET.WebGPU.TextureDataLayout dataLayout, in Silk.NET.WebGPU.Extent3D writeSize) where T0 : unmanaged
    {
        if (queue.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.QueueWriteTexture(queue, destination, data, dataSize, dataLayout, writeSize);
    }

    public static unsafe void Draw(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, uint vertexCount, uint instanceCount, uint firstVertex, uint firstInstance) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderDraw(renderBundleEncoder, vertexCount, instanceCount, firstVertex, firstInstance);
    }

    public static unsafe void DrawIndexed(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, uint indexCount, uint instanceCount, uint firstIndex, int baseVertex, uint firstInstance) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderDrawIndexed(renderBundleEncoder, indexCount, instanceCount, firstIndex, baseVertex, firstInstance);
    }

    public static unsafe void DrawIndexedIndirect(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> indirectBuffer, ulong indirectOffset) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderDrawIndexedIndirect(renderBundleEncoder, indirectBuffer, indirectOffset);
    }

    public static unsafe void DrawIndirect(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> indirectBuffer, ulong indirectOffset) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderDrawIndirect(renderBundleEncoder, indirectBuffer, indirectOffset);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.RenderBundle> Finish(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, Silk.NET.WebGPU.RenderBundleDescriptor* descriptor) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.RenderBundle>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderFinish(renderBundleEncoder, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.RenderBundle> Finish(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, in Silk.NET.WebGPU.RenderBundleDescriptor descriptor) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.RenderBundle>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderFinish(renderBundleEncoder, descriptor));
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, byte* markerLabel) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderInsertDebugMarker(renderBundleEncoder, markerLabel);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, in byte markerLabel) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderInsertDebugMarker(renderBundleEncoder, markerLabel);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, string markerLabel) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderInsertDebugMarker(renderBundleEncoder, markerLabel);
    }

    public static unsafe void PopDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderPopDebugGroup(renderBundleEncoder);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, byte* groupLabel) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderPushDebugGroup(renderBundleEncoder, groupLabel);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, in byte groupLabel) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderPushDebugGroup(renderBundleEncoder, groupLabel);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, string groupLabel) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderPushDebugGroup(renderBundleEncoder, groupLabel);
    }

    public static unsafe void SetBindGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, uint groupIndex, WebGPUPtr<Silk.NET.WebGPU.BindGroup> group, uint dynamicOffsetCount, uint* dynamicOffsets) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderSetBindGroup(renderBundleEncoder, groupIndex, group, dynamicOffsetCount, dynamicOffsets);
    }

    public static unsafe void SetBindGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, uint groupIndex, WebGPUPtr<Silk.NET.WebGPU.BindGroup> group, uint dynamicOffsetCount, in uint dynamicOffsets) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderSetBindGroup(renderBundleEncoder, groupIndex, group, dynamicOffsetCount, dynamicOffsets);
    }

    public static unsafe void SetIndexBuffer(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, Silk.NET.WebGPU.IndexFormat format, ulong offset, ulong size) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderSetIndexBuffer(renderBundleEncoder, buffer, format, offset, size);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, byte* label) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderSetLabel(renderBundleEncoder, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, in byte label) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderSetLabel(renderBundleEncoder, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, string label) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderSetLabel(renderBundleEncoder, label);
    }

    public static unsafe void SetPipeline(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, WebGPUPtr<Silk.NET.WebGPU.RenderPipeline> pipeline) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderSetPipeline(renderBundleEncoder, pipeline);
    }

    public static unsafe void SetVertexBuffer(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder, uint slot, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, ulong offset, ulong size) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderBundleEncoderSetVertexBuffer(renderBundleEncoder, slot, buffer, offset, size);
    }

    public static unsafe void BeginOcclusionQuery(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, uint queryIndex) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderBeginOcclusionQuery(renderPassEncoder, queryIndex);
    }

    public static unsafe void BeginPipelineStatisticsQuery(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet, uint queryIndex) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderBeginPipelineStatisticsQuery(renderPassEncoder, querySet, queryIndex);
    }

    public static unsafe void Draw(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, uint vertexCount, uint instanceCount, uint firstVertex, uint firstInstance) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderDraw(renderPassEncoder, vertexCount, instanceCount, firstVertex, firstInstance);
    }

    public static unsafe void DrawIndexed(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, uint indexCount, uint instanceCount, uint firstIndex, int baseVertex, uint firstInstance) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderDrawIndexed(renderPassEncoder, indexCount, instanceCount, firstIndex, baseVertex, firstInstance);
    }

    public static unsafe void DrawIndexedIndirect(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> indirectBuffer, ulong indirectOffset) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderDrawIndexedIndirect(renderPassEncoder, indirectBuffer, indirectOffset);
    }

    public static unsafe void DrawIndirect(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> indirectBuffer, ulong indirectOffset) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderDrawIndirect(renderPassEncoder, indirectBuffer, indirectOffset);
    }

    public static unsafe void End(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderEnd(renderPassEncoder);
    }

    public static unsafe void EndOcclusionQuery(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderEndOcclusionQuery(renderPassEncoder);
    }

    public static unsafe void EndPipelineStatisticsQuery(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderEndPipelineStatisticsQuery(renderPassEncoder);
    }

    public static unsafe void ExecuteBundles(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, uint bundleCount, NativePtrArray<Silk.NET.WebGPU.RenderBundle> bundles) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderExecuteBundles(renderPassEncoder, bundleCount, bundles);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, byte* markerLabel) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderInsertDebugMarker(renderPassEncoder, markerLabel);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, in byte markerLabel) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderInsertDebugMarker(renderPassEncoder, markerLabel);
    }

    public static unsafe void InsertDebugMarker(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, string markerLabel) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderInsertDebugMarker(renderPassEncoder, markerLabel);
    }

    public static unsafe void PopDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderPopDebugGroup(renderPassEncoder);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, byte* groupLabel) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderPushDebugGroup(renderPassEncoder, groupLabel);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, in byte groupLabel) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderPushDebugGroup(renderPassEncoder, groupLabel);
    }

    public static unsafe void PushDebugGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, string groupLabel) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderPushDebugGroup(renderPassEncoder, groupLabel);
    }

    public static unsafe void SetBindGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, uint groupIndex, WebGPUPtr<Silk.NET.WebGPU.BindGroup> group, uint dynamicOffsetCount, uint* dynamicOffsets) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetBindGroup(renderPassEncoder, groupIndex, group, dynamicOffsetCount, dynamicOffsets);
    }

    public static unsafe void SetBindGroup(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, uint groupIndex, WebGPUPtr<Silk.NET.WebGPU.BindGroup> group, uint dynamicOffsetCount, in uint dynamicOffsets) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetBindGroup(renderPassEncoder, groupIndex, group, dynamicOffsetCount, dynamicOffsets);
    }

    public static unsafe void SetBlendConstant(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, Silk.NET.WebGPU.Color* color) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetBlendConstant(renderPassEncoder, color);
    }

    public static unsafe void SetBlendConstant(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, in Silk.NET.WebGPU.Color color) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetBlendConstant(renderPassEncoder, color);
    }

    public static unsafe void SetIndexBuffer(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, Silk.NET.WebGPU.IndexFormat format, ulong offset, ulong size) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetIndexBuffer(renderPassEncoder, buffer, format, offset, size);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, byte* label) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetLabel(renderPassEncoder, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, in byte label) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetLabel(renderPassEncoder, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, string label) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetLabel(renderPassEncoder, label);
    }

    public static unsafe void SetPipeline(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, WebGPUPtr<Silk.NET.WebGPU.RenderPipeline> pipeline) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetPipeline(renderPassEncoder, pipeline);
    }

    public static unsafe void SetScissorRect(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, uint x, uint y, uint width, uint height) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetScissorRect(renderPassEncoder, x, y, width, height);
    }

    public static unsafe void SetStencilReference(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, uint reference) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetStencilReference(renderPassEncoder, reference);
    }

    public static unsafe void SetVertexBuffer(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, uint slot, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, ulong offset, ulong size) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetVertexBuffer(renderPassEncoder, slot, buffer, offset, size);
    }

    public static unsafe void SetViewport(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder, float x, float y, float width, float height, float minDepth, float maxDepth) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPassEncoderSetViewport(renderPassEncoder, x, y, width, height, minDepth, maxDepth);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout> GetBindGroupLayout(this WebGPUPtr<Silk.NET.WebGPU.RenderPipeline> renderPipeline, uint groupIndex) 
    {
        if (renderPipeline.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPipelineGetBindGroupLayout(renderPipeline, groupIndex));
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.RenderPipeline> renderPipeline, byte* label) 
    {
        if (renderPipeline.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPipelineSetLabel(renderPipeline, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.RenderPipeline> renderPipeline, in byte label) 
    {
        if (renderPipeline.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPipelineSetLabel(renderPipeline, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.RenderPipeline> renderPipeline, string label) 
    {
        if (renderPipeline.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.RenderPipelineSetLabel(renderPipeline, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Sampler> sampler, byte* label) 
    {
        if (sampler.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.SamplerSetLabel(sampler, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Sampler> sampler, in byte label) 
    {
        if (sampler.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.SamplerSetLabel(sampler, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Sampler> sampler, string label) 
    {
        if (sampler.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.SamplerSetLabel(sampler, label);
    }

    public static unsafe void GetCompilationInfo(this WebGPUPtr<Silk.NET.WebGPU.ShaderModule> shaderModule, Silk.NET.WebGPU.PfnCompilationInfoCallback callback, void* userdata) 
    {
        if (shaderModule.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ShaderModuleGetCompilationInfo(shaderModule, callback, userdata);
    }

    public static unsafe void GetCompilationInfo<T0>(this WebGPUPtr<Silk.NET.WebGPU.ShaderModule> shaderModule, Silk.NET.WebGPU.PfnCompilationInfoCallback callback, ref T0 userdata) where T0 : unmanaged
    {
        if (shaderModule.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ShaderModuleGetCompilationInfo(shaderModule, callback, ref userdata);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.ShaderModule> shaderModule, byte* label) 
    {
        if (shaderModule.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ShaderModuleSetLabel(shaderModule, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.ShaderModule> shaderModule, in byte label) 
    {
        if (shaderModule.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ShaderModuleSetLabel(shaderModule, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.ShaderModule> shaderModule, string label) 
    {
        if (shaderModule.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.ShaderModuleSetLabel(shaderModule, label);
    }

    public static unsafe Silk.NET.WebGPU.TextureFormat GetPreferredFormat(this WebGPUPtr<Silk.NET.WebGPU.Surface> surface, WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter) 
    {
        if (surface.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.SurfaceGetPreferredFormat(surface, adapter);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.TextureView> GetCurrentTextureView(this WebGPUPtr<Silk.NET.WebGPU.SwapChain> swapChain) 
    {
        if (swapChain.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.TextureView>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.SwapChainGetCurrentTextureView(swapChain));
    }

    public static unsafe void Present(this WebGPUPtr<Silk.NET.WebGPU.SwapChain> swapChain) 
    {
        if (swapChain.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.SwapChainPresent(swapChain);
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.TextureView> CreateView(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture, Silk.NET.WebGPU.TextureViewDescriptor* descriptor) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.TextureView>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureCreateView(texture, descriptor));
    }

    public static unsafe WebGPUPtr<Silk.NET.WebGPU.TextureView> CreateView(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture, in Silk.NET.WebGPU.TextureViewDescriptor descriptor) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return WebGPUPtr<Silk.NET.WebGPU.TextureView>.MakeStrong(Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureCreateView(texture, descriptor));
    }

    public static unsafe void Destroy(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureDestroy(texture);
    }

    public static unsafe uint GetDepthOrArrayLayers(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureGetDepthOrArrayLayers(texture);
    }

    public static unsafe Silk.NET.WebGPU.TextureDimension GetDimension(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureGetDimension(texture);
    }

    public static unsafe Silk.NET.WebGPU.TextureFormat GetFormat(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureGetFormat(texture);
    }

    public static unsafe uint GetHeight(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureGetHeight(texture);
    }

    public static unsafe uint GetMipLevelCount(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureGetMipLevelCount(texture);
    }

    public static unsafe uint GetSampleCount(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureGetSampleCount(texture);
    }

    public static unsafe Silk.NET.WebGPU.TextureUsage GetUsage(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureGetUsage(texture);
    }

    public static unsafe uint GetWidth(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureGetWidth(texture);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture, byte* label) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureSetLabel(texture, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture, in byte label) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureSetLabel(texture, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture, string label) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureSetLabel(texture, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.TextureView> textureView, byte* label) 
    {
        if (textureView.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureViewSetLabel(textureView, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.TextureView> textureView, in byte label) 
    {
        if (textureView.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureViewSetLabel(textureView, label);
    }

    public static unsafe void SetLabel(this WebGPUPtr<Silk.NET.WebGPU.TextureView> textureView, string label) 
    {
        if (textureView.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.WebGPU.WebGPUAPI.TextureViewSetLabel(textureView, label);
    }
}