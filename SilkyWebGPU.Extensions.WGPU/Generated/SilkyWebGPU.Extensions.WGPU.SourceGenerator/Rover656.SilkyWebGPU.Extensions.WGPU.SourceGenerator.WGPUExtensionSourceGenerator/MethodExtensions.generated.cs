// <auto-generated/>
using Rover656.SilkyWebGPU;
using Rover656.SilkyWebGPU.Native;
using Rover656.SilkyWebGPU.Native.Chain;

using Silk.NET.WebGPU;
using Silk.NET.WebGPU.Extensions.WGPU;

namespace Rover656.SilkyWebGPU.Extensions.WGPU;

public static partial class MethodExtensions
{
    public static unsafe void GenerateReport(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance, Silk.NET.WebGPU.Extensions.WGPU.GlobalReport* report) 
    {
        if (instance.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.GenerateReport(instance, report);
    }

    public static unsafe void GenerateReport(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance, ref Silk.NET.WebGPU.Extensions.WGPU.GlobalReport report) 
    {
        if (instance.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.GenerateReport(instance, ref report);
    }

    public static unsafe ulong SubmitForIndex(this WebGPUPtr<Silk.NET.WebGPU.Queue> queue, uint commandCount, NativePtrArray<Silk.NET.WebGPU.CommandBuffer> commands) 
    {
        if (queue.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.QueueSubmitForIndex(queue, commandCount, commands);
    }

    public static unsafe Silk.NET.Core.Bool32 Poll(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.Core.Bool32 wait, Silk.NET.WebGPU.Extensions.WGPU.WrappedSubmissionIndex* wrappedSubmissionIndex) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.DevicePoll(device, wait, wrappedSubmissionIndex);
    }

    public static unsafe Silk.NET.Core.Bool32 Poll(this WebGPUPtr<Silk.NET.WebGPU.Device> device, Silk.NET.Core.Bool32 wait, in Silk.NET.WebGPU.Extensions.WGPU.WrappedSubmissionIndex wrappedSubmissionIndex) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        return Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.DevicePoll(device, wait, wrappedSubmissionIndex);
    }

    public static unsafe void GetCapabilities(this WebGPUPtr<Silk.NET.WebGPU.Surface> surface, WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, Silk.NET.WebGPU.Extensions.WGPU.SurfaceCapabilities* capabilities) 
    {
        if (surface.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.SurfaceGetCapabilities(surface, adapter, capabilities);
    }

    public static unsafe void GetCapabilities(this WebGPUPtr<Silk.NET.WebGPU.Surface> surface, WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter, ref Silk.NET.WebGPU.Extensions.WGPU.SurfaceCapabilities capabilities) 
    {
        if (surface.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.SurfaceGetCapabilities(surface, adapter, ref capabilities);
    }

    public static unsafe void SetPushConstants(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> encoder, Silk.NET.WebGPU.ShaderStage stages, uint offset, uint sizeBytes, void* data) 
    {
        if (encoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderPassEncoderSetPushConstants(encoder, stages, offset, sizeBytes, data);
    }

    public static unsafe void SetPushConstants<T0>(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> encoder, Silk.NET.WebGPU.ShaderStage stages, uint offset, uint sizeBytes, in T0 data) where T0 : unmanaged
    {
        if (encoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderPassEncoderSetPushConstants(encoder, stages, offset, sizeBytes, data);
    }

    public static unsafe void MultiDrawIndirect(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> encoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, ulong offset, uint count) 
    {
        if (encoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderPassEncoderMultiDrawIndirect(encoder, buffer, offset, count);
    }

    public static unsafe void MultiDrawIndexedIndirect(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> encoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, ulong offset, uint count) 
    {
        if (encoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderPassEncoderMultiDrawIndexedIndirect(encoder, buffer, offset, count);
    }

    public static unsafe void MultiDrawIndirectCount(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> encoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, ulong offset, WebGPUPtr<Silk.NET.WebGPU.Buffer> count_buffer, ulong count_buffer_offset, uint max_count) 
    {
        if (encoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderPassEncoderMultiDrawIndirectCount(encoder, buffer, offset, count_buffer, count_buffer_offset, max_count);
    }

    public static unsafe void MultiDrawIndexedIndirectCount(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> encoder, WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer, ulong offset, WebGPUPtr<Silk.NET.WebGPU.Buffer> count_buffer, ulong count_buffer_offset, uint max_count) 
    {
        if (encoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderPassEncoderMultiDrawIndexedIndirectCount(encoder, buffer, offset, count_buffer, count_buffer_offset, max_count);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.Instance> instance) 
    {
        if (instance.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.InstanceDrop(instance);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.Adapter> adapter) 
    {
        if (adapter.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.AdapterDrop(adapter);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.BindGroup> bindGroup) 
    {
        if (bindGroup.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.BindGroupDrop(bindGroup);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.BindGroupLayout> bindGroupLayout) 
    {
        if (bindGroupLayout.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.BindGroupLayoutDrop(bindGroupLayout);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.Buffer> buffer) 
    {
        if (buffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.BufferDrop(buffer);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.CommandBuffer> commandBuffer) 
    {
        if (commandBuffer.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.CommandBufferDrop(commandBuffer);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.CommandEncoder> commandEncoder) 
    {
        if (commandEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.CommandEncoderDrop(commandEncoder);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.RenderPassEncoder> renderPassEncoder) 
    {
        if (renderPassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderPassEncoderDrop(renderPassEncoder);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.ComputePassEncoder> computePassEncoder) 
    {
        if (computePassEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.ComputePassEncoderDrop(computePassEncoder);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.RenderBundleEncoder> renderBundleEncoder) 
    {
        if (renderBundleEncoder.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderBundleEncoderDrop(renderBundleEncoder);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.ComputePipeline> computePipeline) 
    {
        if (computePipeline.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.ComputePipelineDrop(computePipeline);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.Device> device) 
    {
        if (device.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.DeviceDrop(device);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.PipelineLayout> pipelineLayout) 
    {
        if (pipelineLayout.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.PipelineLayoutDrop(pipelineLayout);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.QuerySet> querySet) 
    {
        if (querySet.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.QuerySetDrop(querySet);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.RenderBundle> renderBundle) 
    {
        if (renderBundle.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderBundleDrop(renderBundle);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.RenderPipeline> renderPipeline) 
    {
        if (renderPipeline.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.RenderPipelineDrop(renderPipeline);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.Sampler> sampler) 
    {
        if (sampler.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.SamplerDrop(sampler);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.ShaderModule> shaderModule) 
    {
        if (shaderModule.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.ShaderModuleDrop(shaderModule);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.Surface> surface) 
    {
        if (surface.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.SurfaceDrop(surface);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.SwapChain> swapChain) 
    {
        if (swapChain.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.SwapChainDrop(swapChain);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.Texture> texture) 
    {
        if (texture.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.TextureDrop(texture);
    }

    public static unsafe void Drop(this WebGPUPtr<Silk.NET.WebGPU.TextureView> textureView) 
    {
        if (textureView.IsNull()) throw new NullReferenceException();
        Rover656.SilkyWebGPU.Extensions.WGPU.WGPU.WGPUAPI.TextureViewDrop(textureView);
    }
}